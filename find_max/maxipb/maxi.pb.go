// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Grpc_course/find_max/maxipb/maxi.proto

package maxipb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InputRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputRequest) Reset()         { *m = InputRequest{} }
func (m *InputRequest) String() string { return proto.CompactTextString(m) }
func (*InputRequest) ProtoMessage()    {}
func (*InputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f28ca55daa2fddb5, []int{0}
}

func (m *InputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputRequest.Unmarshal(m, b)
}
func (m *InputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputRequest.Marshal(b, m, deterministic)
}
func (m *InputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputRequest.Merge(m, src)
}
func (m *InputRequest) XXX_Size() int {
	return xxx_messageInfo_InputRequest.Size(m)
}
func (m *InputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InputRequest proto.InternalMessageInfo

func (m *InputRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type OutputResponse struct {
	Maximum              int64    `protobuf:"varint,1,opt,name=maximum,proto3" json:"maximum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputResponse) Reset()         { *m = OutputResponse{} }
func (m *OutputResponse) String() string { return proto.CompactTextString(m) }
func (*OutputResponse) ProtoMessage()    {}
func (*OutputResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f28ca55daa2fddb5, []int{1}
}

func (m *OutputResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputResponse.Unmarshal(m, b)
}
func (m *OutputResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputResponse.Marshal(b, m, deterministic)
}
func (m *OutputResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputResponse.Merge(m, src)
}
func (m *OutputResponse) XXX_Size() int {
	return xxx_messageInfo_OutputResponse.Size(m)
}
func (m *OutputResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OutputResponse proto.InternalMessageInfo

func (m *OutputResponse) GetMaximum() int64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func init() {
	proto.RegisterType((*InputRequest)(nil), "maxi.InputRequest")
	proto.RegisterType((*OutputResponse)(nil), "maxi.OutputResponse")
}

func init() {
	proto.RegisterFile("Grpc_course/find_max/maxipb/maxi.proto", fileDescriptor_f28ca55daa2fddb5)
}

var fileDescriptor_f28ca55daa2fddb5 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x73, 0x2f, 0x2a, 0x48,
	0x8e, 0x4f, 0xce, 0x2f, 0x2d, 0x2a, 0x4e, 0xd5, 0x4f, 0xcb, 0xcc, 0x4b, 0x89, 0xcf, 0x4d, 0xac,
	0xd0, 0xcf, 0x4d, 0xac, 0xc8, 0x2c, 0x48, 0x02, 0x53, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42,
	0x2c, 0x20, 0xb6, 0x92, 0x1a, 0x17, 0x8f, 0x67, 0x5e, 0x41, 0x69, 0x49, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x90, 0x18, 0x17, 0x5b, 0x5e, 0x69, 0x6e, 0x52, 0x6a, 0x91, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x73, 0x10, 0x94, 0xa7, 0xa4, 0xc5, 0xc5, 0xe7, 0x5f, 0x5a, 0x02, 0x56, 0x58, 0x5c,
	0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x0e, 0x32, 0x21, 0xb7, 0x34, 0x17, 0xaa, 0x14,
	0xc6, 0x35, 0xf2, 0xe5, 0xe2, 0xf1, 0x05, 0x31, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85,
	0x6c, 0xb9, 0xb8, 0xdd, 0x32, 0xf3, 0x52, 0x7c, 0x21, 0xd2, 0x42, 0x42, 0x7a, 0x60, 0x57, 0x20,
	0x5b, 0x2b, 0x25, 0x02, 0x11, 0x43, 0xb5, 0x42, 0x89, 0x41, 0x83, 0xd1, 0x80, 0xd1, 0x89, 0x23,
	0x8a, 0x0d, 0xe2, 0xfa, 0x24, 0x36, 0xb0, 0xcb, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x19,
	0x76, 0xc5, 0x0c, 0xe3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MaximServiceClient is the client API for MaximService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaximServiceClient interface {
	FindMaximum(ctx context.Context, opts ...grpc.CallOption) (MaximService_FindMaximumClient, error)
}

type maximServiceClient struct {
	cc *grpc.ClientConn
}

func NewMaximServiceClient(cc *grpc.ClientConn) MaximServiceClient {
	return &maximServiceClient{cc}
}

func (c *maximServiceClient) FindMaximum(ctx context.Context, opts ...grpc.CallOption) (MaximService_FindMaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MaximService_serviceDesc.Streams[0], "/maxi.MaximService/FindMaximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &maximServiceFindMaximumClient{stream}
	return x, nil
}

type MaximService_FindMaximumClient interface {
	Send(*InputRequest) error
	Recv() (*OutputResponse, error)
	grpc.ClientStream
}

type maximServiceFindMaximumClient struct {
	grpc.ClientStream
}

func (x *maximServiceFindMaximumClient) Send(m *InputRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maximServiceFindMaximumClient) Recv() (*OutputResponse, error) {
	m := new(OutputResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaximServiceServer is the server API for MaximService service.
type MaximServiceServer interface {
	FindMaximum(MaximService_FindMaximumServer) error
}

func RegisterMaximServiceServer(s *grpc.Server, srv MaximServiceServer) {
	s.RegisterService(&_MaximService_serviceDesc, srv)
}

func _MaximService_FindMaximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaximServiceServer).FindMaximum(&maximServiceFindMaximumServer{stream})
}

type MaximService_FindMaximumServer interface {
	Send(*OutputResponse) error
	Recv() (*InputRequest, error)
	grpc.ServerStream
}

type maximServiceFindMaximumServer struct {
	grpc.ServerStream
}

func (x *maximServiceFindMaximumServer) Send(m *OutputResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maximServiceFindMaximumServer) Recv() (*InputRequest, error) {
	m := new(InputRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MaximService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "maxi.MaximService",
	HandlerType: (*MaximServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindMaximum",
			Handler:       _MaximService_FindMaximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "Grpc_course/find_max/maxipb/maxi.proto",
}
